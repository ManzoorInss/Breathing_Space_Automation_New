// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BSS_Automation_Framework.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("BreathingPaceEndToEndJourney")]
    public partial class BreathingPaceEndToEndJourneyFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "BSSEndToEndJourney.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "BreathingPaceEndToEndJourney", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line hidden
#line 4
  testRunner.Given("I log into the Breathing Space Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Start of Standard BreathingSpace - Add previous name - Change debtor name and pre" +
            "vious name and address")]
        [NUnit.Framework.CategoryAttribute("UI")]
        [NUnit.Framework.CategoryAttribute("UI-E2E")]
        [NUnit.Framework.TestCaseAttribute("Money Advisor", "Manzoor Money Advisor", "CheckFieldValidation", "", "", "", "deletePreviousName", "", "EnterPostcode", "", "ChangeCurrentAddress", "", "", "email", "Yes", "sameashomeaddress", "CMP", "Manzoor Test Creditors", "999", "Debt", "Mental Health", "mental health nurse", null)]
        public void StartOfStandardBreathingSpace_AddPreviousName_ChangeDebtorNameAndPreviousNameAndAddress(
                    string user, 
                    string organisation, 
                    string clientDetailsFieldValue, 
                    string changeCurrentName, 
                    string clientName, 
                    string previousName, 
                    string removePreviosName, 
                    string addPreviousNames, 
                    string findAddress_Postcode, 
                    string addressManually, 
                    string currentAddress, 
                    string hideAddress, 
                    string addPreviousAddress, 
                    string preferences, 
                    string options, 
                    string businessAddress, 
                    string creditorType, 
                    string creditorName, 
                    string debtAmount, 
                    string debtType, 
                    string selectBreathingSpaceType, 
                    string nominatedContactRole, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "UI",
                    "UI-E2E"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("User", user);
            argumentsOfScenario.Add("Organisation", organisation);
            argumentsOfScenario.Add("ClientDetailsFieldValue", clientDetailsFieldValue);
            argumentsOfScenario.Add("ChangeCurrentName", changeCurrentName);
            argumentsOfScenario.Add("ClientName", clientName);
            argumentsOfScenario.Add("PreviousName", previousName);
            argumentsOfScenario.Add("RemovePreviosName", removePreviosName);
            argumentsOfScenario.Add("AddPreviousNames", addPreviousNames);
            argumentsOfScenario.Add("FindAddress-Postcode", findAddress_Postcode);
            argumentsOfScenario.Add("AddressManually", addressManually);
            argumentsOfScenario.Add("CurrentAddress", currentAddress);
            argumentsOfScenario.Add("HideAddress", hideAddress);
            argumentsOfScenario.Add("AddPreviousAddress", addPreviousAddress);
            argumentsOfScenario.Add("Preferences", preferences);
            argumentsOfScenario.Add("Options", options);
            argumentsOfScenario.Add("BusinessAddress", businessAddress);
            argumentsOfScenario.Add("CreditorType", creditorType);
            argumentsOfScenario.Add("CreditorName", creditorName);
            argumentsOfScenario.Add("DebtAmount", debtAmount);
            argumentsOfScenario.Add("DebtType", debtType);
            argumentsOfScenario.Add("SelectBreathingSpaceType", selectBreathingSpaceType);
            argumentsOfScenario.Add("NominatedContactRole", nominatedContactRole);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Start of Standard BreathingSpace - Add previous name - Change debtor name and pre" +
                    "vious name and address", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
  this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
#line 8
    testRunner.When("I navigate to the Breathing Space portal homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "User",
                            "Organisation"});
                table1.AddRow(new string[] {
                            "Money Advisor",
                            string.Format("{0}", organisation)});
#line 9
      testRunner.And("I select organisation from the following:", ((string)(null)), table1, "And ");
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "Organisation",
                            "ActiveBSLink",
                            "ReviewDebtLink",
                            "ProposedDebtLink",
                            "SoldDebtLink",
                            "TransferClientLink",
                            "TransferredClientsLink"});
                table2.AddRow(new string[] {
                            string.Format("{0}", organisation),
                            "<ActiveBSLink>",
                            "<ReviewDebtLink>",
                            "<ProposedDebtLink>",
                            "<SoldDebtLink>",
                            "<TransferClientLink>",
                            "<TransferredClientsLink>"});
#line 12
    testRunner.And("I choose to create a Breathing Space", ((string)(null)), table2, "And ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "ClientDetailsFields",
                            "FirstName",
                            "MiddleName",
                            "LastName",
                            "BirthDay",
                            "BirthMonth",
                            "BirthYear"});
                table3.AddRow(new string[] {
                            string.Format("{0}", clientDetailsFieldValue),
                            "John",
                            "A.",
                            "Doe",
                            "15",
                            "10",
                            "1985"});
#line 16
    testRunner.And("I enter the client details for name summary", ((string)(null)), table3, "And ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "ClientDetailsFields",
                            "PreviousName",
                            "FirstName",
                            "MiddleName",
                            "LastName",
                            "BirthDay",
                            "BirthMonth",
                            "BirthYear"});
                table4.AddRow(new string[] {
                            string.Format("{0}", clientDetailsFieldValue),
                            "add previous name",
                            "John",
                            "A.",
                            "Doe",
                            "15",
                            "10",
                            "1985"});
#line 20
    testRunner.And("I enter the client details for previous name", ((string)(null)), table4, "And ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "ChangeClientName",
                            "ChangePreviousName",
                            "DeletePreviosName",
                            "AddPreviousNames",
                            "FirstName",
                            "MiddleName",
                            "LastName",
                            "BirthDay",
                            "BirthMonth",
                            "BirthYear"});
                table5.AddRow(new string[] {
                            string.Format("{0}", clientName),
                            string.Format("{0}", previousName),
                            string.Format("{0}", removePreviosName),
                            string.Format("{0}", addPreviousNames),
                            "Addison",
                            "B.",
                            "Harris",
                            "15",
                            "11",
                            "1985"});
#line 24
    testRunner.And("I enter the client name details", ((string)(null)), table5, "And ");
#line hidden
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "EnterAddressManually",
                            "FindAddress-Postcode",
                            "Postcode",
                            "AddressLine1",
                            "AddressLine2",
                            "City",
                            "SpecificAddress"});
                table6.AddRow(new string[] {
                            string.Format("{0}", addressManually),
                            string.Format("{0}", findAddress_Postcode),
                            "RH6 7HS",
                            "91 Albert Road",
                            "HORLEY",
                            "Surrey",
                            "91 Albert Road, HORLEY, Surrey RH6 7HS"});
#line 28
    testRunner.And("I enter the Client address", ((string)(null)), table6, "And ");
#line hidden
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "ChangeCurrentAddress",
                            "HideAddress",
                            "AddPreviousAddress",
                            "Postcode",
                            "AddressLine1",
                            "AddressLine2",
                            "City",
                            "SpecificAddress"});
                table7.AddRow(new string[] {
                            string.Format("{0}", currentAddress),
                            string.Format("{0}", hideAddress),
                            string.Format("{0}", addPreviousAddress),
                            "RH6 7HS",
                            "91 Albert Road",
                            "HORLEY",
                            "Surrey",
                            "101 Albert Road, HORLEY, Surrey RH6 7HS"});
#line 31
    testRunner.When("I enter the Client address summary page", ((string)(null)), table7, "When ");
#line hidden
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "Preference",
                            "Email",
                            "ConfirmEmail"});
                table8.AddRow(new string[] {
                            string.Format("{0}", preferences),
                            "test@example.com",
                            "test@example.com"});
#line 34
    testRunner.When("I select the debtor contact preference", ((string)(null)), table8, "When ");
#line hidden
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "Option"});
                table9.AddRow(new string[] {
                            string.Format("{0}", options)});
#line 37
    testRunner.And("I provide the debtor business debts details", ((string)(null)), table9, "And ");
#line hidden
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "BusinessName",
                            "ClientBusinessAddress",
                            "EnterAddressManually",
                            "FindAddress-Postcode",
                            "Postcode",
                            "AddressLine1",
                            "AddressLine2",
                            "City",
                            "SpecificAddress"});
                table10.AddRow(new string[] {
                            "ABC Ltd",
                            string.Format("{0}", businessAddress),
                            "<EnterAddressManually>",
                            string.Format("{0}", findAddress_Postcode),
                            "RH6 7HS",
                            "91 Albert Road",
                            "HORLEY",
                            "Surrey",
                            "91 Albert Road, HORLEY, Surrey RH6 7HS"});
#line 41
    testRunner.And("I added the debtor business name and address", ((string)(null)), table10, "And ");
#line hidden
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "UpdateClientName",
                            "UpdateDOB",
                            "UpdateAddPreviousNames",
                            "UpdateCurrentAddress",
                            "UpdateHideAddress",
                            "UpdateAddPreviousAddress",
                            "ChangeNotifications",
                            "UpdateAddBusinessAddress",
                            "UpdateBusinessAddress",
                            "DeleteBusinessAddress",
                            "FirstName",
                            "MiddleName",
                            "LastName",
                            "BirthDay",
                            "BirthMonth",
                            "BirthYear",
                            "Postcode",
                            "AddressLine1",
                            "AddressLine2",
                            "City",
                            "SpecificAddress",
                            "Preference",
                            "ClientBusinessAddress"});
                table11.AddRow(new string[] {
                            "No",
                            "No",
                            "No",
                            "No",
                            "no",
                            "no",
                            "no",
                            "no",
                            "no",
                            "No",
                            "John",
                            "A.",
                            "Doe",
                            "15",
                            "10",
                            "1985",
                            "RH6 7HS",
                            "91 Albert Road",
                            "HORLEY",
                            "Surrey",
                            "101 Albert Road, HORLEY, Surrey RH6 7HS",
                            "no",
                            "no"});
#line 45
    testRunner.And("I update the debtor account summary page", ((string)(null)), table11, "And ");
#line hidden
                TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                            "CreditorType",
                            "CreditorName",
                            "Postcode",
                            "Preference",
                            "Email",
                            "ConfirmEmail",
                            "DebtType",
                            "DebtAmount",
                            "Reference"});
                table12.AddRow(new string[] {
                            string.Format("{0}", creditorType),
                            "Jots Geeten Creditor",
                            "RH6 7HS",
                            string.Format("{0}", preferences),
                            "test@example.com",
                            "test@example.com",
                            string.Format("{0}", debtType),
                            string.Format("{0}", debtAmount),
                            "BSS123"});
#line 48
    testRunner.And("I choose to add debt and creditor", ((string)(null)), table12, "And ");
#line hidden
                TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                            "CreditorName",
                            "FindAddress-Postcode",
                            "Postcode",
                            "AddressLine1",
                            "AddressLine2",
                            "City",
                            "SpecificAddress",
                            "DebtType",
                            "Preference",
                            "Email",
                            "ConfirmEmail"});
                table13.AddRow(new string[] {
                            "Jots Geeten Creditor",
                            string.Format("{0}", findAddress_Postcode),
                            "RH6 7HS",
                            "91 Albert Road",
                            "HORLEY",
                            "Surrey",
                            "91 Albert Road, HORLEY, Surrey RH6 7HS",
                            string.Format("{0}", debtType),
                            string.Format("{0}", preferences),
                            "test@example.com",
                            "test@example.com"});
#line 52
    testRunner.And("I updated creditor account summary", ((string)(null)), table13, "And ");
#line hidden
                TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                            "SubmitTheBreathingSpace"});
                table14.AddRow(new string[] {
                            "Yes"});
#line 56
    testRunner.And("I choose to submit breathing space", ((string)(null)), table14, "And ");
#line hidden
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "BreathingSpaceType",
                            "NominatedContactRole",
                            "Fullname",
                            "Telephone",
                            "Email",
                            "ConfirmEmail",
                            "ContactPrefrerenceMethod"});
                table15.AddRow(new string[] {
                            string.Format("{0}", selectBreathingSpaceType),
                            string.Format("{0}", nominatedContactRole),
                            "JohnATom",
                            "+4408081570192",
                            "test@example.com",
                            "test@example.com",
                            "Email"});
#line 59
    testRunner.And("I Select breathing space Type", ((string)(null)), table15, "And ");
#line hidden
#line 63
    testRunner.And("I agree declaration and submit to Breathing space", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
    testRunner.And("I Submited Client Breathing Space and generated BSS Client reference number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "BSSReferenceNumber",
                            "LastNameDOB"});
                table16.AddRow(new string[] {
                            "reference",
                            "lastnameanddob"});
#line 67
    testRunner.And("I search for the Breathing Space using the following options", ((string)(null)), table16, "And ");
#line hidden
                TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                            "MentalHealthTag",
                            "BSSStatus"});
                table17.AddRow(new string[] {
                            "Mental Health",
                            "Active"});
#line 71
    testRunner.And("I validate the breathing space search results", ((string)(null)), table17, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
